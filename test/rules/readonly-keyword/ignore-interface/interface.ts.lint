// Interface with readonly modifiers should not produce failures
interface Foo {
  readonly a: number,
  readonly b: Array<string>,
  readonly c: () => string,
  readonly d: { readonly [key: string]: string },
  readonly [key: string]: string,
}

// PropertySignature and IndexSignature members without readonly modifier should not produce failures
interface Foo {
  a: number,
  b: Array<string>,
  c: () => string,
  d: { readonly [key: string]: string },
  [key: string]: string,
  ~~~~~~~~~~~~~~~~~~~~~~ [A readonly modifier is required.]
  // Also verify that nested members are checked
  readonly d: {
    a: number,
    b: Array<string>,
    c: () => string,
    d: { readonly [key: string]: string },
    [key: string]: string,
  }
}

// CallSignature and MethodSignature cannot have readonly modifiers and should not produce failures
export interface Zoo {
  (): void
  foo(): void
}

[failure]: A readonly modifier is required.
